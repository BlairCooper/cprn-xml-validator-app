# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 15
      uses: actions/setup-java@v1
      with:
        java-version: 15
        
    - name: Setup Maven Settings
      uses: s4u/maven-settings-action@v2.4.0
      with:
        servers: |
          [{
              "id": "maven.github.blair",
              "username": "${{ secrets.USER_PACKAGE_READ }}",
              "password": "${{ secrets.TOKEN_PACKAGE_READ }}"
          }]

    - name: Configure Git user
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"

    - name: Build with Maven
      id: prepare-release
      run: mvn -B release:prepare release:perform --file pom.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.prepare-release.outputs.tag }}
        release_name: Release ${{ steps.prepare-release.outputs.tag }}


  release_assets:
    name: Release assets
    needs: build # we need to know the upload URL
    runs-on: ${{ matrix.config.os }} # we run many different builds

    strategy:
      # just an example matrix
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest

    steps:
      # checkout of cource
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
        
      - name: Setup Maven Settings
        uses: s4u/maven-settings-action@v2.4.0
        with:
          servers: |
            [{
                "id": "maven.github.blair",
                "username": "${{ secrets.USER_PACKAGE_READ }}",
                "password": "${{ secrets.TOKEN_PACKAGE_READ }}"
            }]

      # Do JPackage here
      - name: Build with Maven
        id: create-package
        run: mvn -B package jpackage:jpackage@${{ matrix.config.os }} --file pom.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # and finally do an upload!
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.upload_url }}
          # This is how it will be named on the release page. Put hatever name
          # you like, remember that they need to be different for each platform.
          # You can choose any build matrix parameters. For Rust I use the
          # target triple.
          asset_name: CprnXmlValidator-${{ matrix.config.os }}
          # The path to the file you want to upload.
          asset_path: ./path/to/your/file
          # probably you will need to change it, but most likely you are
          # uploading a binary file
          asset_content_type: application/octet-stream
